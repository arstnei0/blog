---
import Header from '$component/Header.astro';
import emojiStatus from '@util/emoji';
import Global from '$component/Global.astro'
import Head from '$component/Head.astro'

const { props } = Astro;
const { frontmatter } = props;

const title = frontmatter?.title || props.title;

const lang = frontmatter?.lang || props.lang || 'en';

const page = props.page;

const {
	author = 'Zihan Chen',
	keywords = ['Blog', 'Personal website'],
	description = "Zihan's personal website and blog posts"
} = props.meta || {}
---

<!DOCTYPE html>
<html lang={lang}>
	<head>
		<meta charset="UTF-8" />
		<meta name="viewport" content="width=device-width" />
		<meta name="generator" content={Astro.generator} />
		<meta name="author" content={author}>
		<meta name="keywords" content={keywords.join(', ')}>
		<meta name="description" content={description}>
		<title>{ title ? `${title} ${emojiStatus} Zihan` : 'Zihan' }</title>

		<script is:inline>
			// Init theme
			if (!localStorage.getItem("mp")) localStorage.setItem("mp", (
				(globalThis.matchMedia && globalThis.matchMedia("(prefers-color-scheme: dark)").matches) ? 'dark' : 'light'
			))

			const mode = localStorage.getItem('mp')

			const classList = document.documentElement.classList
			let has = false
			for (let i in classList) {
				if (classList[i] === "dark") {
					has = true
					document.documentElement.classList.replace("dark", "light")
				} else if (classList[i] === "light") {
					has = true
					document.documentElement.classList.replace("light", "dark")
				}
			}

			if (!has) {
				document.documentElement.classList.add(mode)
			}

			let tried = false

			function sendMessageToGiscus(mode) {
				const iframe = document.querySelector("iframe.giscus-frame")
				if (!iframe) {
					if (!tried) {
						tried = true
						setTimeout(() => sendMessageToGiscus(mode), 1000)
					}
				} else {
					iframe.contentWindow.postMessage(
						{
							giscus: {
								setConfig: {
									theme: mode,
								},
							},
						},
						"https://giscus.app"
					)
				}
			}

			sendMessageToGiscus(mode)
		</script>

		<Head></Head>

		<link rel="icon" href="/avatar.png" type="image/png">
	</head>
	<body>
		<div id="site">
			<Header page={page}>
			</Header>
			<main id="main">
				<slot />
			</main>
		</div>

		<script lang="js">
			(function(c,l,a,r,i,t,y){
				c[a]=c[a]||function(){(c[a].q=c[a].q||[]).push(arguments)};
				t=l.createElement(r);t.async=1;t.src="https://www.clarity.ms/tag/"+i;
				y=l.getElementsByTagName(r)[0];y.parentNode.insertBefore(t,y);
			})(window, document, "clarity", "script", "e1uigu6k2j");
		</script>		
	</body>
</html>

<style>
main {
	margin-left: 10%;
	margin-right: 10%;
}

#site {

}
</style>

<Global></Global>