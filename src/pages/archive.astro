---
import PostCard from "$component/PostCard.astro"
import Layout from "$layout/Base.astro"
import { getGroupedPosts } from "$lib/posts"
import t from "@t"
import type { MarkdownInstance } from "astro"

let posts: Record<string, MarkdownInstance<Record<string, any>>[]> = {}
try {
	posts = getGroupedPosts(await Astro.glob("./post/*.md"))
} catch (e) {}
---

<Layout title="Archive">
	<h1 id="my-blog-posts" class="fw6">{t("blog.archive")}</h1>

	<div id="posts">
		{
			Reflect.ownKeys(posts).length !== 0 ? (
				Reflect.ownKeys(posts).map((key) => {
					return (
						<div class="month">
							<h1 class="fw4 year-title">{key}</h1>
							<div class="month-content">
								{posts[key as string].map((post) => {
									return (
										<PostCard
											post={post.frontmatter}
											url={post.url}
										/>
									)
								})}
							</div>
						</div>
					)
				})
			) : (
				<h1 class="fw4">{t("blog.noPosts")}</h1>
			)
		}
	</div>
</Layout>

<style is:global>
	#my-blog-posts {
		font-size: var(--big-title);
	}

	#posts {
		margin: 1%;
		/* display: flex; */
	}

	#archive {
		color: var(--text-color);
	}

	.month {
		margin-bottom: 6%;
	}

	.month-content {
		display: flex;
		flex-wrap: wrap;
	}
</style>
